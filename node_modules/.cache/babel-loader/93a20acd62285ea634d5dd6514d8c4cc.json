{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal\\\\HEAP\\\\travel-app\\\\src\\\\components\\\\cognito-api\\\\Account.js\";\nimport React, { createContext } from \"react\";\nimport { AuthenticationDetails, CognitoUser, Cgnito } from \"amazon-cognito-identity-js\";\nimport Pool from \"./UserPool\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/createContext();\n\nconst Account = props => {\n  const getSession = async () => {\n    return await new Promise((resolve, reject) => {\n      const user = Pool.getCurrentUser();\n\n      if (user) {\n        user.getSession((err, session) => {\n          if (err) {\n            reject();\n          } else {\n            resolve(session);\n          }\n        });\n      } else {\n        reject();\n      }\n    });\n  };\n\n  const confirmCode = (user, Username, Password) => {\n    const code = prompt(\"Please enter ur verification code\");\n    user.confirmRegistration(code);\n    authenticate(Username, Password);\n  };\n\n  const authenticate = async (Username, Password) => {\n    return await new Promise((resolve, reject) => {\n      const user = new CognitoUser({\n        Username,\n        Pool\n      });\n      const authDetails = new AuthenticationDetails({\n        Username,\n        Password\n      });\n      user.authenticateUser(authDetails, {\n        onSuccess: data => {\n          console.log(\"onSuccess: \", data);\n          resolve(data);\n        },\n        onFailure: err => {\n          if (err.toString().includes(\"UserNotConfirmedException\")) {\n            confirmCode(user, Username, Password);\n          }\n\n          console.log(\"onFailure: \", err);\n          reject(err);\n        },\n        newPasswordRequired: data => {\n          console.log(\"newPasswordRequired: \", data);\n          resolve(data);\n        }\n      });\n    });\n  };\n\n  const signUp = async (email, password) => {\n    return await new Promise((resolve, reject) => {\n      Pool.signUp(email, password, [], null, (err, data) => {\n        if (err) {\n          console.log(err);\n        }\n\n        console.log(data);\n      }, {\n        onSuccess: data => {\n          console.log(\"onSuccess: \", data);\n          resolve(data);\n        },\n        onFailure: err => {\n          console.error(\"onFailure: \", err);\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const logout = () => {\n    const user = Pool.getCurrentUser();\n\n    if (user) {\n      user.signOut();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: {\n      authenticate,\n      getSession,\n      signUp\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Account;\nexport { Account, AccountContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","createContext","AuthenticationDetails","CognitoUser","Cgnito","Pool","AccountContext","Account","props","getSession","Promise","resolve","reject","user","getCurrentUser","err","session","confirmCode","Username","Password","code","prompt","confirmRegistration","authenticate","authDetails","authenticateUser","onSuccess","data","console","log","onFailure","toString","includes","newPasswordRequired","signUp","email","password","error","logout","signOut","children"],"sources":["D:/Personal/HEAP/travel-app/src/components/cognito-api/Account.js"],"sourcesContent":["import React, {createContext} from \"react\";\r\nimport { AuthenticationDetails, CognitoUser, Cgnito } from \"amazon-cognito-identity-js\";\r\nimport Pool from \"./UserPool\";\r\n\r\n\r\nconst AccountContext = createContext();\r\n\r\nconst Account = (props) => {\r\n\r\n  const getSession = async () => {\r\n    return await new Promise((resolve, reject) => {\r\n      const user = Pool.getCurrentUser();\r\n      if (user){\r\n        user.getSession((err, session) => {\r\n          if (err){\r\n            reject();\r\n          }\r\n          else {\r\n            resolve(session)\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        reject();\r\n      }}) \r\n  }\r\n\r\n  const confirmCode = (user, Username, Password) => {\r\n    const code = prompt(\"Please enter ur verification code\")\r\n    user.confirmRegistration(code)\r\n    authenticate(Username, Password)\r\n  }\r\n\r\n  const authenticate = async (Username, Password) => {\r\n    return await new Promise ((resolve, reject) => {\r\n      const user = new CognitoUser({\r\n        Username,\r\n        Pool\r\n      })\r\n  \r\n      const authDetails = new AuthenticationDetails({\r\n        Username,\r\n        Password,\r\n      })\r\n  \r\n      user.authenticateUser(authDetails, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess: \", data)\r\n          resolve(data)\r\n        },\r\n        onFailure: (err) => {\r\n          if (err.toString().includes(\"UserNotConfirmedException\") ){\r\n            confirmCode(user, Username, Password)\r\n          }\r\n          console.log(\"onFailure: \", err)\r\n          reject(err)\r\n        },\r\n        newPasswordRequired: (data) => {\r\n          console.log(\"newPasswordRequired: \", data)\r\n          resolve(data)\r\n        }\r\n      })\r\n    })\r\n  }\r\n  \r\n  const signUp = async (email, password) => {\r\n    return await new Promise ((resolve, reject) => {\r\n      Pool.signUp(email, password, [], null, (err, data) => {\r\n     \r\n        if (err) {\r\n          console.log(err)\r\n        }\r\n        console.log(data)\r\n      }, {\r\n        onSuccess: (data) => {\r\n          console.log(\"onSuccess: \", data)\r\n          resolve(data)\r\n        },\r\n        onFailure: (err) => {\r\n          console.error(\"onFailure: \", err)\r\n          reject(err)\r\n        },\r\n      })\r\n    })  \r\n  };\r\n\r\n  const logout = () => {\r\n    const user = Pool.getCurrentUser();\r\n    if (user) {\r\n      user.signOut();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <AccountContext.Provider value={{authenticate, getSession, signUp}}>\r\n      {props.children}\r\n    </AccountContext.Provider>\r\n  )\r\n\r\n};\r\n\r\nexport {Account, AccountContext};"],"mappings":"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"},"metadata":{},"sourceType":"module"}